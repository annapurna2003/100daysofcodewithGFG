#include<bits/stdc++.h>
using namespace std;
class Solution{
    public:
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
     int highestPower(int n)
     {
        int p = 0;
        while((1<<p)<=n)
        {
            p++;
        }
        return p-1;
    }
    int countSetBits(int n)
    {
        // Your logic here
        if(n==0) return 0;
        
        int a = highestPower(n);
        int beforePowerA = a*(1 << (a-1));
        int msbFromPowerAtoN = n -(1 << a)+1;
        int remaining = countSetBits(n-(1<<a));
        int res = beforePowerA + msbFromPowerAtoN + remaining;
        return res;
    }
};
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        Solution ob;
        cout<<ob.countSetBits(n)<endl;
    }
    return 0;
}    
